# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
# принимать данные (список списков) для формирования матрицы. Подсказка: матрица — система некоторых математических
# величин, расположенных в виде прямоугольной схемы. Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
#
# 31    32         3    5    32        3    5    8    3
# 37    43         2    4    6         8    3    7    1
# 51    86        -1   64   -8
#
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде. Далее реализовать
# перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц). Результатом
# сложения должна быть новая матрица. Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент
# первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    matrix: list

    def __init__(self, matrix: list):
        self.matrix = matrix

    def __add__(self, other: 'Matrix'):
        try:
            rows_count = len(self.matrix)
            column_count = len(self.matrix[0])

            return Matrix([
                [
                    self.matrix[i][j] + other.matrix[i][j]
                    for j in range(column_count)
                ]
                for i in range(rows_count)
            ])
        except IndexError as e:
            print(f"Ошибка: {IndexError.__name__} - {e.args[0]}\n"
                  f"Необходимо задать матрицы одинакового размера")
            exit(1)

    def __str__(self):
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in self.matrix]))


matrix_A = Matrix([[3, 2, -1],
                   [5, 4, 64],
                   [32, 6, -18]])
matrix_B = Matrix([[31, 37, 51],
                   [32, 43, 86],
                   [-5, 2, -21]])
matrix_C = Matrix([[17, 22, -3],
                   [29, -5, 22],
                   [7, 19, 95]])

print(matrix_A + matrix_B + matrix_C)
